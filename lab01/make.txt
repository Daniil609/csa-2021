1. Когда вы находитесь в сеансе lldb, как вы устанавливаете аргументы, которые будут передаваться программе при ее запуске?
# run <arg1, arg2>/process launch — <arg1, arg2> 
Аргументы к программе могут быть заданы как аргументы к команде run: r arg1 arg2 ... или r < <имя_файла>. run без аргументов использует те же аргументы, которые использовались предыдущей командой run, или которые установлены командой set args. 

2. Как создать точку останова? 
# b/br/break <номер строки>, b/br/break <имя_функции>

3. Как выполнить следующую строку кода C в программе после остановки в точке останова?
# n/next/thread step-over

4. Если следующая строка кода является вызовом функции, вы выполните весь вызов функции сразу, если воспользуетесь своим ответом на # 3. (Если нет, рассмотрите другую команду для # 3!) Как вы сообщите GDB, что хотите вместо этого отладить код внутри функции (т.е. перейти внутрь функции)?
# s/step/thread step-in

5. Как продолжить выполнение программы после остановки на точке останова?
# c/continue

6. Как вы можете распечатать значение переменной (или даже выражение типа 1 + 2) в gdb?
# po <имя_переменной, выражение>

7. Как настроить gdb так, чтобы он отображал значение переменной после каждого шага?
# watchpoint set variable/wa s v <имя переменной>

8. Как вы показываете список всех переменных и их значений в текущей функции? 
# fr v/frame variable

9. Как выйти из GDB?
# Команда q/quit, ctrl+d